
sharpmod
---------------

sharpmod is a plugin for metamod which by itself is a pluginsystem for the goldsrc engine (Half-Life, Counter-Strike classic).
It enables the developer to write plugins for the goldsrc engine in C# or other languages which can be compiled to CIL (the bytecode
for .NET virtual machines).
Right only C# is supported, there is a Ruby branch which, but it hasn't all the functionality


Compiling the modified metamod and the metamod plugin.
---------------

In order to compile sharpmod 2 additional packages are required: metamod and hlsdk.
While hlsdk can be used just as it is, the metamod package has to be modified a little bit, since metamod checks 
for invalid pointers from loaded plugins by looking if the pointer is in the address space of the dynamic library. 
Since we are using mono, pointers used by mono and passed to the native code won't be in the dynamic library memory chunk.
The patch is named "metamod-hack-fix.patch" and will fix this behaviour (it's quite a hack, a proper fix would be nice).

The required packages can be found at http://metamod.sourceforge.net/files/sdk/ and http://metamod.org/.

The Makefile in the root directory can take care of downloading and patching everything and compiling everything,
just use make to download, untar, patch and compile the custom metamod and metamod plugin and all the C# code with the plugins.


Mono
---------------

Mono 2.4.3 is needed, since earlier versions have a bug, which won't let managed pointers of functions be passed, therefore 
making it impossible to add server command callbacks.
Also compile it with default parameter specifiers allowed, since they are used in the code.
I have used custom mono build version 2.4.3 "Mono C# compiler version 142.39.0.0"
"Mono JIT compiler version 142439 (tarball Thu Dec 10 21:46:59 CET 2009)".

I tried it on the 2.6.4 version, works aswell too, just download it from github.
the commands look like this (just use another directory if you dont like /opt/mono-2.6.4 or dont have root rights):

git clone ....
./autogen.sh
./configure --prefix=/opt/mono-2.6.4
make
sudo make install

use the following script to use your custom mono build:

MONO_PREFIX="/opt/mono-2.6.4"
GNOME_PREFIX=/usr/lib
export DYLD_LIBRARY_PATH=$MONO_PREFIX/lib:$DYLD_LIBRARY_PATH
export LD_LIBRARY_PATH=$MONO_PREFIX/lib:$LD_LIBRARY_PATH
export C_INCLUDE_PATH=$MONO_PREFIX/include:$GNOME_PREFIX/include
export ACLOCAL_PATH=$MONO_PREFIX/share/aclocal
export PKG_CONFIG_PATH=$MONO_PREFIX/lib/pkgconfig:$GNOME_PREFIX/lib/pkgconfig
PATH=$MONO_PREFIX/bin:$PATH
PS1="[mono] \w @ "

write it into mono-dev-env and chmod +x mono-dev-env
execute it with ". mono-dev-env"
Now you are running your custom mono version.


Ruby
---------------

A lot of code is now generated with ruby, so you will need to install ruby, rubygems and erb (with rubygems)


Using sharpmod in your counter-strike server
---------------
Use the metamod binary in the directory include/metamod/metamod/opt/metamod_i386.so in your server, create a soft link
ln -s for easier usage. There are plenty of resources which explain how to use the metamod.
In order to use the sharpmod just create a link from cstrike/addons/sharpmod (or any other mod) to 
bin/ (the bin/ in the sharpmod compiling directory) and add the sharpmod binary to addons/metamod/plugins.ini.
The entry should look like this: "linux addons/sharpmod/sharpmod_mm_i686.so"
Afterwards just start the server, you should see a lot of debug messages since it is in an early development fase.


Directory structure
---------------

The metamod and hlsdk packages have to be placed in the folder "include/", the folder structure should look like this:

include/
  hlsdk/
    singleplayer/
    multiplayer/
    SDK_EULA.txt
    ...
  metamod/
    metamod/
    doc/
    stub_plugin/
    tools/
    trace_plugin/
    wdmisc_plugin/
    README.txt
    ...

This is only interesting if you are planning to do something by yourself, just use make if you don't want to download
them manually.
